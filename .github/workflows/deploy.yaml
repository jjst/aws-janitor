name: Deploy

on:
  push:
  workflow_dispatch:
    inputs:
      env:
        description: 'Target environment'
        required: false
        default: 'test'
        type: choice
        options:
          - test
          - live

jobs:
  determine-env:
    name: Determine environment
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-env.outputs.env }}
    steps:
      - name: Set environment
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Manual trigger: using provided input."
            echo "ENV=${{ github.event.inputs.env }}" >> $GITHUB_ENV
            echo "env=${{ github.event.inputs.env }}" >> $GITHUB_OUTPUT
          else
            if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
              echo "Push to main: live environment."
              echo "ENV=live" >> $GITHUB_ENV
              echo "env=live" >> $GITHUB_OUTPUT
            else
              echo "Push to other branch: test environment."
              echo "ENV=test" >> $GITHUB_ENV
              echo "env=test" >> $GITHUB_OUTPUT
            fi
          fi
  cdk-deploy:
    name: CDK Deploy
    runs-on: ubuntu-latest
    needs: determine-env
    concurrency:
      group: ${{ needs.determine-env.outputs.env }}
      cancel-in-progress: true
    env:
      ENV: ${{ needs.determine-env.outputs.env }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '20'
    - run: python -m pip install --upgrade tox
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Install CDK CLI
      run: npm install -g aws-cdk
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run CDK Deploy
      run: cdk deploy --all --require-approval never
      env:
        CDK_DEFAULT_ACCOUNT: ${{ vars.AWS_ACCOUNT_ID }}
        CDK_DEFAULT_REGION: ${{ vars.AWS_REGION }}
